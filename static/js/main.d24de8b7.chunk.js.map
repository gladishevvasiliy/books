{"version":3,"sources":["components/Pagination/index.js","components/Search/index.js","components/BookListItem/index.js","components/BookList/index.js","pages/Main/index.js","components/Examples/index.js","pages/Book/index.js","pages/About/index.js","components/Header/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["PaginationComponent","state","activePageNum","_this","props","changeActivePageNum","pageNum","setState","_this2","this","_this$props","pageNums","path","react_default","a","createElement","Pagination","map","key","className","Link","to","concat","onClick","role","React","Component","library","add","faSearch","Search","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","formHandler","e","getBooks","preventDefault","_e$target$elements","target","elements","no","name","year","location","size","fullness","binding","options","content_type","field","value","length","id","isNil","objectSpread","defineProperty","resetSearch","ReactDOM","findDOMNode","textInput","reset","createRef","open","Container","Card","Header","Row","Col","Button","aria-controls","aria-expanded","index_es","icon","color","Collapse","in","Form","onSubmit","ref","form","Group","as","md","lg","controlId","Label","Control","type","xs","variant","BookListItem","book","fields","style","width","sm","preview","Image","src","file","url","fluid","Body","history","push","sys","Text","publisher","Footer","tags","tag","BookList","Fragment","bookList","components_BookListItem","Main","pages","client","contentful","space","accessToken","fetchBooks","then","setBooks","getEntries","response","i","items","splice","goToPage","_this$state","match","Search_Search","Alert","Route","render","components_BookList","assign","params","page","Pagination_PaginationComponent","Examples","_ref","examples","Carousel","example","Item","alt","Book","fetchBook","getEntry","setBook","console","log","Table","responsive","bookFile","href","components_Examples","About","faScroll","Navbar","Nav","faFacebook","faVk","faGlobe","fixed","faLongArrowAltLeft","App","Switch","Redirect","from","exact","component","Boolean","window","hostname","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d24de8b7.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport './style.css'\r\nexport default class PaginationComponent extends React.Component {\r\n  state = {\r\n    activePageNum: this.props.activePageNum,\r\n  }\r\n\r\n  changeActivePageNum = pageNum => {\r\n    this.setState({\r\n      activePageNum: pageNum,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { pageNums, path } = this.props\r\n    const { activePageNum } = this.state\r\n    return (\r\n      <Pagination>\r\n        {pageNums.map(pageNum =>\r\n          pageNum === activePageNum ? (\r\n            <li key={pageNum} className=\"page-item active\">\r\n              <span className=\"page-link page-custom-active-link\">\r\n                {pageNum}\r\n                <span className=\"sr-only\">(current)</span>\r\n              </span>\r\n            </li>\r\n          ) : (\r\n            <li key={pageNum} className=\"page-item\">\r\n              <Link\r\n                to={`${path}/${pageNum}`}\r\n                onClick={() => this.changeActivePageNum(pageNum)}\r\n                className=\"page-link page-custom-link\"\r\n                role=\"button\"\r\n              >\r\n                {pageNum}\r\n              </Link>\r\n            </li>\r\n          )\r\n        )}\r\n      </Pagination>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { isNil } from 'lodash'\r\nimport {\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Collapse,\r\n} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport './style.css'\r\n\r\nlibrary.add(faSearch)\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.textInput = React.createRef()\r\n    this.state = {\r\n      open: false,\r\n    }\r\n  }\r\n\r\n  formHandler = e => {\r\n    const { getBooks } = this.props\r\n    e.preventDefault()\r\n    const {\r\n      no,\r\n      name,\r\n      year,\r\n      location,\r\n      size,\r\n      fullness,\r\n      binding,\r\n    } = e.target.elements\r\n\r\n    const fields = [no, name, year, location, size, fullness, binding]\r\n    let options = { content_type: 'book' }\r\n\r\n    fields.map(field => {\r\n      if (field.value.length === 0) return\r\n      if (field.id === 'no' && !isNil(field.value)) {\r\n        options = {\r\n          ...options,\r\n          ['fields.' + field.id]: field.value,\r\n        }\r\n        return\r\n      }\r\n      options = { ...options, ['fields.' + field.id + '[match]']: field.value }\r\n    })\r\n    getBooks(options)\r\n  }\r\n  resetSearch = () => {\r\n    const { getBooks } = this.props\r\n    ReactDOM.findDOMNode(this.textInput).reset()\r\n    getBooks()\r\n  }\r\n  render() {\r\n    const { open } = this.state\r\n    return (\r\n      <Container>\r\n        <Card className=\"search-container\">\r\n          <Card.Header>\r\n            <Row>\r\n              <Col>Поиск</Col>\r\n              <Col className=\"text-right\">\r\n                <Button\r\n                  onClick={() => this.setState({ open: !open })}\r\n                  aria-controls=\"example-collapse-text\"\r\n                  aria-expanded={open}\r\n                  className=\"button-custom\"\r\n                  size=\"sm\"\r\n                >\r\n                  <FontAwesomeIcon icon={faSearch} color=\"#fff\" />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Collapse in={this.state.open}>\r\n            <div id=\"example-collapse-text\">\r\n              <Form\r\n                className=\"search-form\"\r\n                onSubmit={this.formHandler}\r\n                ref={form => (this.textInput = form)}\r\n              >\r\n                <Form.Row>\r\n                  <Form.Group as={Col} md=\"1\" lg={1} controlId=\"no\">\r\n                    <Form.Label>№</Form.Label>\r\n                    <Form.Control size=\"sm\" type=\"number\" />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md=\"2\" lg={2} controlId=\"name\">\r\n                    <Form.Label>Название</Form.Label>\r\n                    <Form.Control size=\"sm\" type=\"text\" />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md=\"2\" lg={2} controlId=\"year\">\r\n                    <Form.Label>Датировка</Form.Label>\r\n                    <Form.Control size=\"sm\" type=\"text\" />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md=\"3\" lg={3} controlId=\"location\">\r\n                    <Form.Label>Местность издания</Form.Label>\r\n                    <Form.Control size=\"sm\" type=\"text\" />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md=\"2\" lg={2} controlId=\"size\">\r\n                    <Form.Label>Размер</Form.Label>\r\n                    <Form.Control size=\"sm\" type=\"text\" />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md=\"4\" lg={3} controlId=\"fullness\">\r\n                    <Form.Label>Полнота и сохранность</Form.Label>\r\n                    <Form.Control size=\"sm\" type=\"text\" />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md=\"2\" lg={2} controlId=\"binding\">\r\n                    <Form.Label>Переплет</Form.Label>\r\n                    <Form.Control size=\"sm\" type=\"text\" />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Row>\r\n                  <Col xs={2} md={2} lg={1} className=\"text-left\">\r\n                    <Button\r\n                      className=\"button-custom\"\r\n                      variant=\"primary\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Поиск\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xs={2} md={2} lg={1}>\r\n                    <Button variant=\"secondary\" onClick={this.resetSearch}>\r\n                      Сбросить поиск\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n          </Collapse>\r\n        </Card>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { isNil } from 'lodash'\r\nimport { Card, Button, Container, Row, Col, Image } from 'react-bootstrap'\r\nimport './style.css'\r\n\r\nconst BookListItem = props => (\r\n  <Card\r\n    key={props.book.fields.no}\r\n    style={{ width: 'auto' }}\r\n    className=\"card-book\"\r\n  >\r\n    <Container>\r\n      <Row>\r\n        <Col className=\"card-book-preview\" xs={12} sm={12} md={6}>\r\n          {isNil(props.book.fields.preview.fields) ? null : (\r\n            <Image\r\n              variant=\"top\"\r\n              src={`https:${props.book.fields.preview.fields.file.url}`}\r\n              fluid\r\n            />\r\n          )}\r\n        </Col>\r\n        <Col xs={12} sm={12} md={6} className=\"card-book-info\">\r\n          <Card.Body>\r\n            <h3\r\n              onClick={() => props.history.push(`/book/${props.book.sys.id}`)}\r\n            >\r\n              №{props.book.fields.no} {props.book.fields.name}\r\n            </h3>\r\n            <Card.Text className=\"book-info\">\r\n              Датировка: {props.book.fields.year}\r\n              <br />\r\n              Место создания: {props.book.fields.location}\r\n              <br />\r\n              Автор: {props.book.fields.publisher}\r\n              <br />\r\n              Размер: {props.book.fields.size}\r\n              <br />\r\n              Полнота и сохранность: {props.book.fields.fullness}\r\n              <br />\r\n              Автор: {props.book.fields.publisher}\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    <Card.Footer>\r\n      <Row>\r\n        <Col md={9} sm={8} xs={7} className=\"book-tags\">\r\n          {isNil(props.book.fields.tags)\r\n            ? null\r\n            : props.book.fields.tags.map(tag => `#${tag}  `)}\r\n        </Col>\r\n        <Col md={3} sm={4} xs={5} className=\"text-right\">\r\n          <Button\r\n            className=\"button-custom\"\r\n            variant=\"primary\"\r\n            onClick={() => props.history.push(`/book/${props.book.sys.id}`)}\r\n          >\r\n            Подробнее\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Card.Footer>\r\n  </Card>\r\n)\r\n\r\nexport default BookListItem\r\n","import React from 'react'\r\nimport BookListItem from '../BookListItem'\r\n\r\nconst BookList = props => (\r\n  <>\r\n    {props.bookList.map(book => (\r\n      <BookListItem book={book} history={props.history} key={book.sys.id} />\r\n    ))}\r\n  </>\r\n)\r\n\r\nexport default BookList\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { Container, Alert } from 'react-bootstrap'\r\nimport PaginationComponent from '../../components/Pagination'\r\nimport { isNil } from 'lodash'\r\nimport * as contentful from 'contentful'\r\nimport Search from '../../components/Search'\r\nimport BookList from '../../components/BookList'\r\n\r\nimport './style.css'\r\n\r\nexport default class Main extends React.Component {\r\n  state = {\r\n    pages: [],\r\n    activePageNum: 1,\r\n    pageNums: [],\r\n  }\r\n\r\n  client = contentful.createClient({\r\n    space: 'ztvkbeux51wi',\r\n    accessToken:\r\n      '158416fa541a39154640e01fe05fc96222f8211e04f8a79efaea6b42d37d3c3c',\r\n  })\r\n\r\n  componentDidMount() {\r\n    this.getBooks()\r\n  }\r\n\r\n  getBooks = options => {\r\n    return this.fetchBooks(options).then(this.setBooks)\r\n  }\r\n\r\n  fetchBooks = options =>\r\n    this.client.getEntries(!isNil(options) ? options : { content_type: 'book' })\r\n\r\n  setBooks = response => {\r\n    let i = 0\r\n    const pages = []\r\n    const pageNums = []\r\n    while (response.items.length > 0) {\r\n      pages.push(response.items.splice(0, 10))\r\n      pageNums.push(i + 1)\r\n      i++\r\n    }\r\n    this.setState({\r\n      pages: pages,\r\n      pageNums: pageNums,\r\n    })\r\n  }\r\n\r\n  goToPage = pageNum => {\r\n    this.setState({\r\n      activePageNum: pageNum,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { pages, pageNums } = this.state\r\n    const { match } = this.props\r\n    if (pages.length === 0)\r\n      return (\r\n        <>\r\n          <Search getBooks={this.getBooks} />\r\n          <Container className=\"main-container\">\r\n            <Alert variant=\"danger\">Книг по данному запросу не найдено</Alert>\r\n          </Container>\r\n        </>\r\n      )\r\n\r\n    return (\r\n      <>\r\n        <Search getBooks={this.getBooks} />\r\n        <Container className=\"main-container\">\r\n          <Route\r\n            path={`${match.path}/:page`}\r\n            render={props => (\r\n              <BookList\r\n                bookList={\r\n                  isNil(pages[props.match.params.page - 1])\r\n                    ? pages[0]\r\n                    : pages[props.match.params.page - 1]\r\n                }\r\n                {...props}\r\n              />\r\n            )}\r\n          />\r\n          {pages.length === 1 ? null : (\r\n            <PaginationComponent\r\n              pageNums={pageNums}\r\n              path={match.path}\r\n              activePageNum={1}\r\n            />\r\n          )}\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Image, Carousel } from 'react-bootstrap'\r\n\r\nconst Examples = ({ examples }) => (\r\n  <React.Fragment>\r\n    {examples.length === 1 ? (\r\n      <Image\r\n        className=\"d-block w-100\"\r\n        // variant=\"top\"\r\n        src={`https:${examples[0].fields.file.url}`}\r\n        // fluid\r\n      />\r\n    ) : (\r\n      <Carousel>\r\n        {examples.map(example => (\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={`https:${example.fields.file.url}`}\r\n              alt=\"Пример\"\r\n            />\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n    )}\r\n  </React.Fragment>\r\n)\r\nexport default Examples\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Col, Row, Table, Carousel } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport * as contentful from 'contentful'\r\nimport { isNil } from 'lodash'\r\nimport Examples from '../../components/Examples'\r\nimport './style.css'\r\n\r\nexport default class Book extends Component {\r\n  state = {\r\n    book: {},\r\n  }\r\n\r\n  client = contentful.createClient({\r\n    space: 'ztvkbeux51wi',\r\n    accessToken:\r\n      '158416fa541a39154640e01fe05fc96222f8211e04f8a79efaea6b42d37d3c3c',\r\n  })\r\n\r\n  componentDidMount() {\r\n    this.fetchBook().then(this.setBook)\r\n  }\r\n\r\n  fetchBook = () => this.client.getEntry(this.props.match.params.id)\r\n\r\n  setBook = response => {\r\n    this.setState({\r\n      book: response.fields,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { book } = this.state\r\n    console.log(book)\r\n    if (isNil(book.preview)) return null\r\n    return (\r\n      <>\r\n        <Container className=\"main-container\">\r\n          <Row className=\"back-row\">\r\n            <Link className=\"back-link custom-link\" to={`/`}>\r\n              <FontAwesomeIcon icon=\"long-arrow-alt-left\" />\r\n              {`   `}\r\n              Назад\r\n            </Link>\r\n          </Row>\r\n          <Row>\r\n            <Col md={4}>\r\n              <h1 className=\"book-title\">{book.name}</h1>\r\n              <Table responsive>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Инвентарный номер</td>\r\n                    <td>{book.no}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Место создания</td>\r\n                    <td>{book.location}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Датировка</td>\r\n                    <td>{book.year}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Размер</td>\r\n                    <td>{book.size}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Полнота и сохранность</td>\r\n                    <td>{book.fullness}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Автор</td>\r\n                    <td>{book.publisher}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Файлы *.pdf</td>\r\n                    <td>\r\n                      {!isNil(book.bookFile) ? (\r\n                        <a href={book.bookFile} className=\"custom-link\">\r\n                          Загрузить\r\n                        </a>\r\n                      ) : null}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n            <Col md={8}>\r\n              {isNil(book.examples) ? null : (\r\n                <Examples examples={book.examples} />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h3>О нас</h3>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\r\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\r\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\r\n        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\r\n        occaecat cupidatat non proident, sunt in culpa qui officia deserunt\r\n        mollit anim id est laborum.\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faScroll } from '@fortawesome/free-solid-svg-icons'\r\nimport './style.css'\r\n\r\nlibrary.add(faScroll)\r\n\r\nexport default () => {\r\n  return (\r\n    <Navbar className=\"header\">\r\n      <Link to={`/`} className=\"navbar-brand\">\r\n        <FontAwesomeIcon icon={faScroll} color=\"#212121\" />\r\n        {'   '}\r\n        Библиотека\r\n      </Link>\r\n      <Nav className=\"mr-auto\">\r\n        <Link className=\"header-link nav-link\" to={`/about`}>\r\n          О Нас\r\n        </Link>\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Link } from 'react-router-dom'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons'\r\nimport { faVk, faFacebook } from '@fortawesome/free-brands-svg-icons'\r\nimport './style.css'\r\n\r\nlibrary.add(faFacebook, faVk, faGlobe)\r\n\r\nexport default () => {\r\n  return (\r\n    <Navbar className=\"footer\" fixed=\"bottom\">\r\n      <Nav className=\"mr-auto\">\r\n        <Link className=\"header-link nav-link\" to={`/about`}>\r\n          О Нас\r\n        </Link>\r\n        <Nav.Link href=\"https://vk.com/kirovold\">\r\n          <FontAwesomeIcon icon={faVk} size=\"lg\" color=\"#78909C\" />\r\n        </Nav.Link>\r\n        <Nav.Link href=\"https://vk.com/kirovold\">\r\n          <FontAwesomeIcon icon={faFacebook} size=\"lg\" color=\"#78909C\" />\r\n        </Nav.Link>\r\n        <Nav.Link href=\"https://vk.com/kirovold\">\r\n          <FontAwesomeIcon icon={faGlobe} size=\"lg\" color=\"#78909C\" />\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Main from './pages/Main'\r\nimport Book from './pages/Book'\r\nimport About from './pages/About'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport './App.css'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faLongArrowAltLeft } from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(faLongArrowAltLeft)\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Switch>\r\n          <Redirect from=\"/\" exact to=\"home/1\" />\r\n          {/* Добавлен редирект для помещения на сайт */}\r\n          <Redirect from=\"/books\" exact to=\"home/1\" />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/book/:id\" component={Book} />\r\n          <Route path=\"/home\" component={Main} />\r\n        </Switch>\r\n        <Footer />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}